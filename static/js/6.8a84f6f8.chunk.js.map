{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/utils/validators/validators.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["FormControl","meta","touched","error","children","hasError","className","s","formControl","Input","props","input","restProps","Textarea","CreateField","placeholder","name","validate","component","type","text","module","exports","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"8QAGMA,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACpCC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWC,IAAEC,YAAc,KAAOH,EAAWE,IAAEJ,MAAQ,IAA5D,UACI,8BAAMC,IACLC,GAAY,+BAAOF,QAKnBM,EAAQ,SAACC,GAAW,IACtBC,EAAuBD,EAAvBC,MAAUC,EADW,YACEF,EADF,WAE5B,OACI,cAACV,EAAD,2BAAiBU,GAAjB,aACI,iDAAWC,GAAWC,QAKrBC,EAAW,SAACH,GAAW,IACzBC,EAAuBD,EAAvBC,MAAUC,EADc,YACDF,EADC,WAE/B,OACI,cAACV,EAAD,2BAAiBU,GAAjB,aACI,oDAAcE,GAAeD,QAI5BG,EAAc,SAACC,EAAaC,EAAMC,EAAUC,EAAWC,EAAMC,GACtE,OACI,qCACI,cAAC,IAAD,CACIL,YAAaA,EACbC,KAAMA,EACNC,SAAUA,EACVC,UAAWA,EACXC,KAAMA,IAETC,O,oBCvCbC,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,iCCD3E,oEAAO,IAAMC,EAAW,SAACC,GACrB,IAAIA,EAGJ,MAAO,qBAGEC,EAAmB,SAACC,GAC7B,OAAO,SAACF,GACJ,GAAIA,EAAMG,OAASD,EACf,MAAM,iHAAN,OAA8BA,M,oBCT1CL,EAAOC,QAAU,CAAC,iBAAmB,kC,uHCM/BI,EAAYD,YAAiB,IAc7BG,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAZL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc5B,EAAW,EAAXA,MAC9B,OACI,uBAAM6B,SAAUD,EAAhB,UACKjB,YAAY,QAAS,QAAS,CAACS,IAAUG,GAAYjB,IAAO,SAC5DK,YAAY,WAAY,WAAY,CAACS,IAAUG,GAAYjB,IAAO,YAClEK,YAAY,GAAI,aAAc,GAAIL,IAAO,WAAY,eACrDN,GAAS,qBAAKG,UAAWC,IAAE0B,iBAAlB,SAAqC9B,IAC/C,iDA0BG+B,uBAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEiB,CAACE,WAA1BJ,EAjBD,SAACxB,GAIX,OAAIA,EAAM0B,OACC,cAAC,IAAD,CAAUG,GAAI,aAGrB,gCACI,uCACA,cAACX,EAAD,CAAgBI,SATP,SAACQ,GACd9B,EAAM4B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.8a84f6f8.chunk.js","sourcesContent":["import s from './FormsControls.module.css'\r\nimport {Field} from 'redux-form'\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...restProps} {...input} />\r\n        </FormControl>\r\n    )\r\n}\r\nexport const CreateField = (placeholder, name, validate, component, type, text) => {\r\n    return (\r\n        <>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validate}\r\n                component={component}\r\n                type={type}\r\n            />\r\n            {text}\r\n        </>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2hHF4\",\"error\":\"FormsControls_error__bgKgi\"};","export const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value.length > maxLength) {\r\n            return `Максимальная длинна ${maxLength}`\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3-U88\"};","import {reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from '../utils/validators/validators'\r\nimport {CreateField, Input} from '../common/FormsControls/FormsControls'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/authReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport s from './Login.module.css'\r\nconst maxLength = maxLengthCreator(20)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {CreateField('email', 'email', [required, maxLength], Input, 'email')}\r\n            {CreateField('password', 'password', [required, maxLength], Input, 'password')}\r\n            {CreateField('', 'rememberMe', [], Input, 'checkbox', 'remember me')}\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default connect(mapStateToProps, {login})(Login)\r\n"],"sourceRoot":""}