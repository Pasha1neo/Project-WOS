{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","meta","touched","error","children","hasError","className","s","formControl","Input","props","input","restProps","Textarea","CreateField","placeholder","name","validate","component","type","text","module","exports","required","value","maxLengthCreator","maxLength","length","DialogItem","style","dialog","active","to","id","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","DialogData","map","d","messagesElements","MessageData","m","dialogs","dialogsItems","messageBlock","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.e83bb085.chunk.js","sourcesContent":["import s from './FormsControls.module.css'\r\nimport {Field} from 'redux-form'\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...restProps} {...input} />\r\n        </FormControl>\r\n    )\r\n}\r\nexport const CreateField = (placeholder, name, validate, component, type, text) => {\r\n    return (\r\n        <>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validate}\r\n                component={component}\r\n                type={type}\r\n            />\r\n            {text}\r\n        </>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2hHF4\",\"error\":\"FormsControls_error__bgKgi\"};","export const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value.length > maxLength) {\r\n            return `Максимальная длинна ${maxLength}`\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2bE8p\",\"dialogsItems\":\"Dialogs_dialogsItems__2ESMX\",\"messageBlock\":\"Dialogs_messageBlock__aTKbU\",\"messages\":\"Dialogs_messages__3Cc_V\",\"message\":\"Dialogs_message__3DaCY\",\"inputBlock\":\"Dialogs_inputBlock__3fYIQ\",\"text\":\"Dialogs_text__2xQTG\",\"send\":\"Dialogs_send__1y8ur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__3s2Ge\",\"active\":\"DialogItem_active__1ijhX\"};","import style from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem\r\n","import style from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={style.message}>{props.message}</div>\r\n}\r\nexport default Message\r\n","import style from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from '../common/FormsControls/FormsControls'\r\nimport {maxLengthCreator, required} from '../utils/validators/validators'\r\n\r\nconst maxLength = maxLengthCreator(20)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                placeholder='Введите сообщение'\r\n                name={'newMessageBody'}\r\n                component={Textarea}\r\n                validate={[required, maxLength]}\r\n            />\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'DialogAddMessageFormRedux',\r\n})(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.DialogData.map((d) => (\r\n        <DialogItem name={d.name} key={d.id} id={d.id} />\r\n    ))\r\n\r\n    let messagesElements = state.MessageData.map((m) => <Message message={m.message} key={m.id} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>{dialogsElements}</div>\r\n            <div>\r\n                <div className={style.messageBlock}>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedurect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import Dialogs from './Dialogs'\r\nimport {sendMessageCreator} from '../../redux/dialogsReducer'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {withAuthRedurect} from '../hoc/withAuthRedirect'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedurect)(Dialogs)\r\n"],"sourceRoot":""}